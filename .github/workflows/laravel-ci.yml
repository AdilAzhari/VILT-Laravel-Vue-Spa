name: Laravel CI/CD

on: [push, pull_request]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, ctype, fileinfo, dom, curl, mysql, pdo, pdo_mysql
          coverage: pcov

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install Composer dependencies
        run: |
          composer install --prefer-dist --no-interaction
          composer require laravel/pint phpstan/phpstan --dev --prefer-dist --no-interaction

      - name: Install NPM dependencies
        run: npm ci
          
      - name: Cache
        uses: actions/cache@v4.2.3
  
                
  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
  
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
  
      - name: Install Composer dependencies
        run: |
          composer install --prefer-dist --no-interaction
          composer require laravel/pint --dev --prefer-dist --no-interaction
  
      - name: Run Laravel Pint
        run: vendor/bin/pint --test
  
      - name: Run ESLint
        run: npx eslint resources/js --ext .js,.vue --fix

  analyze:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Run PHPStan
        run: vendor/bin/phpstan analyse --memory-limit=1G

      - name: Run Rector
        run: |
          composer require rector/rector --dev --prefer-dist --no-interaction
          vendor/bin/rector process --dry-run --clear-cache

  security:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Check PHP vulnerabilities
        run: composer audit
      
      - name: Check JS vulnerabilities
        run: |
          if [ -f yarn.lock ]; then
            yarn audit --level moderate
          else
            npm audit --production
          fi

  test:
    needs: [setup, lint, analyze, security]
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test_db
        ports: ["3306:3306"]
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          coverage: pcov

      - name: Run Tests
        env:
          DB_CONNECTION: mysql
          DB_DATABASE: test_db
          DB_USERNAME: root
          DB_PASSWORD: password
        run: |
          php artisan config:clear
          php artisan migrate:fresh --env=testing --force
          php artisan test --coverage-clover=coverage.xml

      - name: Upload Coverage
        uses: codecov/codecov-action@v3
